import pandas as pd
import numpy as np

import math
import datetime as dt
import matplotlib.pyplot as plt

# For Evalution we will use these library
from sklearn.metrics import mean_squared_error, mean_absolute_error, explained_variance_score, r2_score
from sklearn.metrics import mean_poisson_deviance, mean_gamma_deviance, accuracy_score
from sklearn.preprocessing import MinMaxScaler

# For model building we will use these library
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
from tensorflow.keras.layers import LSTM

#ploting  libraries
import matplotlib.pyplot as plt
from itertools import cycle
import plotly.graph_objects as go
import plotly.express as px
from plotly.subplots import make_subplots

import yfinance as yf

# Download Bitcoin data
btc_data = yf.download('BTC-USD', start='2020-01-01', end='2024-04-10')

btc_data.head()

#see the number of days (rows) and fields available
btc_data.shape

btc_data.info()
btc_data.describe()

#check if there is any null values
btc_data.isnull().values.any()

#slicing for jan 2020 to dec 2020
y_2020 = btc_data.loc['2020-01-01':'2020-12-31']

y_2020 = y_2020.drop(['Adj Close', 'Volume'], axis=1)

y_2020.head()

# Grouping by month and calculating the mean of 'Open' and 'Close'
monthwise = btc_data.groupby(btc_data.index.strftime('%B'))[['Open','Close']].mean()

# Specifying the desired order of months
new_order = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',
             'September', 'October', 'November', 'December']

# Reindexing the DataFrame to match the desired order
monthwise = monthwise.reindex(new_order)

monthwise